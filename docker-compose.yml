version: '3.7'

services:
  messages-service:
    build:
      context: .
      target: development
      dockerfile: ./apps/messages-service/Dockerfile
    command: npm run start:dev messages-service
    env_file:
      - ./apps/messages-service/.env
    depends_on:
      - mongo
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3000:3000'

  notification-service:
    build:
      context: .
      dockerfile: ./apps/notification-service/Dockerfile
      target: development
    command: npm run start:dev notification-service
    env_file:
      - ./apps/notification-service/.env
    depends_on:
      - mongo
      - rabbitmq
      - messages-service
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3001:3000'

  mongo:
    image: mongo:focal
    restart: always
    ports:
      - 27017:27017
    volumes:
      - mongodb_master_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password123

  rabbitmq:
    image: rabbitmq
    ports:
      - '5672:5672'

volumes:
  mongodb_master_data:
    driver: local